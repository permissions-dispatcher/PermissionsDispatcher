apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

configurations {
    lintChecks
}

dependencies {
    implementation "androidx.core:core:$ANDROIDX_LIBRARY_VERSION"
    implementation "androidx.fragment:fragment:$ANDROIDX_LIBRARY_VERSION"
    implementation "androidx.collection:collection:$ANDROIDX_LIBRARY_VERSION"
    implementation "androidx.legacy:legacy-support-v13:$ANDROIDX_LIBRARY_VERSION"

    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    testImplementation "org.powermock:powermock-api-mockito:$POWERMOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"

    api project(path: ':annotation')
    lintChecks project(path: ':lint', configuration: 'lintChecks')
}

publish {
    userOrg = USER
    groupId = GROUP_ID
    artifactId = ARTIFACT_ID_LIBRARY
    version = VERSION
    desc = DESCRIPTION
    website = WEBSITE
    licences = LICENCES
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task copyLintJar(type: Copy) {
    from(configurations.lintChecks) {
        rename { 'lint.jar' }
    }
    into 'build/intermediates/lint/'
}

project.afterEvaluate {
    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
    compileLintTask.dependsOn(copyLintJar)
}

// Android Library project: Artifactory Plugin adds 1 publication per Build Type
project.ext.publicationName = "release"
apply from: rootProject.file('gradle/gradle-artifactory-upload.gradle')
