import org.gradle.internal.jvm.Jvm
import permissions.dispatcher.AndroidJarDependencyPlugin
import permissions.dispatcher.AarToJarConversionPlugin

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "com.vanniktech.maven.publish"
apply plugin: AndroidJarDependencyPlugin
apply plugin: AarToJarConversionPlugin

// Connect sources & tests to library project
convertAarsToJar.dependsOn ":library:assembleRelease"

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
            details.useVersion KOTLIN_VERSION
        }
    }
}

dependencies {
    compile "androidx.annotation:annotation:$ANDROIDX_LIBRARY_VERSION"
    compile "org.jetbrains.kotlinx:kotlinx-metadata-jvm:$KOTLIN_METADATA_VERSION"
    compile "com.squareup:javapoet:$JAVAPOET_VERSION"
    compile "com.squareup:kotlinpoet:$KOTLINPOET_VERSION"
    compile project(path: ':annotation')

    testCompileAar "androidx.legacy:legacy-support-v4:$ANDROIDX_LIBRARY_VERSION"
    testCompileAar project(path: ":library", configuration: "default")

    testCompile androidJar()
    testCompile files(Jvm.current().getToolsJar())
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile "com.google.testing.compile:compile-testing:$COMPILE_TESTING_VERSION"
    testCompile "commons-io:commons-io:$COMMONS_IO_VERSION"
    testCompile "com.squareup.okio:okio:2.1.0"
    testCompile "androidx.legacy:legacy-support-v4:$ANDROIDX_LIBRARY_VERSION"
    testCompile "com.github.permissions-dispatcher:kompile-testing:$KOMPILE_TESTING_VERSION"
}
